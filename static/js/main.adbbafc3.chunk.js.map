{"version":3,"sources":["components/Layout/Layout.tsx","components/pages/HomePage/HomePage.tsx","components/hoc/PeopleProvider.tsx","api/people.js","components/hooks/usePeople.ts","components/pages/PeoplePage/PersonName.tsx","components/pages/PeoplePage/PersonRow.tsx","components/pages/PeoplePage/PeopleTable.tsx","components/pages/PeoplePage/PeoplePage.tsx","components/pages/PeoplePage/NewPerson.tsx","components/pages/NotFoundPage/NotFoundPage.tsx","App.tsx","index.tsx"],"names":["Layout","className","to","isActive","classNames","HomePage","PeopleContext","React","createContext","people","setPeople","PeopleProvider","children","useState","useEffect","fetchPeople","a","fetch","then","json","contextValue","useMemo","Provider","value","usePeople","useContext","PersonName","person","selector","slug","sex","name","PersonRow","mother","find","mom","motherName","father","dad","fatherName","born","died","PeopleTable","location","useLocation","history","useNavigate","useSearchParams","searchParams","nameQuery","get","query","setQuery","sortBy","sortOrder","visiblePeople","filter","toLowerCase","includes","applyQuery","useCallback","debounce","newQuery","set","trimLeft","delete","toString","handleSort","setSort","sort","b","localeCompare","type","onChange","event","target","placeholder","style","width","map","elem","onClick","id","pathname","PeoplePage","length","NewPerson","navigate","useForm","mode","register","handleSubmit","formState","errors","isValid","getValues","reset","values","currentYear","Date","getFullYear","getPossibleParents","gender","possibleMothers","possibleFathers","autoComplete","onSubmit","data","newPerson","split","join","required","pattern","message","htmlFor","min","max","disabled","NotFoundPage","App","path","element","index","replace","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adbbafc3.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const Layout: React.FC = () => (\n  <>\n    <header>\n      <nav className=\"navbar\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => classNames(\n              'navbar-item is-tab', { 'is-active': isActive },\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => classNames(\n              'navbar-item is-tab', { 'is-active': isActive },\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </nav>\n    </header>\n\n    <main className=\"container is-max-desktop pl-3 pr-3 mt-5\">\n      <Outlet />\n    </main>\n  </>\n);\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { getPeople } from '../../api/people';\n\ntype GlobalContext = {\n  people: Person[];\n  setPeople: (people: Person[]) => void;\n};\n\nexport const PeopleContext = React.createContext<GlobalContext>({\n  people: [],\n  setPeople: () => {},\n});\n\nexport const PeopleProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    const fetchPeople = async () => {\n      await getPeople()\n        .then(setPeople);\n    };\n\n    fetchPeople();\n  }, []);\n\n  const contextValue = useMemo(() => {\n    return {\n      people,\n      setPeople,\n    };\n  }, [people]);\n\n  return (\n    <PeopleContext.Provider value={contextValue}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","export const getPeople = () => (\n  fetch('https://mate-academy.github.io/react_people-table/api/people.json')\n    .then(people => people.json())\n);\n","import { useContext } from 'react';\nimport { PeopleContext } from '../hoc/PeopleProvider';\n\nexport const usePeople = () => {\n  return useContext(PeopleContext);\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport ScrollIntoView from 'react-scroll-into-view';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonName: React.FC<Props> = ({\n  person,\n}) => (\n  <ScrollIntoView selector={`#${person.slug}`}>\n    <Link\n      to={`/people/${person.slug}`}\n      className={person.sex === 'f'\n        ? 'has-text-danger'\n        : 'has-text-link'}\n    >\n      {person.name}\n    </Link>\n  </ScrollIntoView>\n);\n","import React from 'react';\nimport { usePeople } from '../../hooks/usePeople';\nimport { PersonName } from './PersonName';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const { people } = usePeople();\n  const mother = people.find(mom => mom.name === person.motherName);\n  const father = people.find(dad => dad.name === person.fatherName);\n\n  return (\n    <>\n      <td>\n        <PersonName person={person} />\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {mother ? (\n          <PersonName person={mother} />\n        ) : (\n          person.motherName || 'unknown'\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonName person={father} />\n        ) : (\n          person.fatherName || 'unknown'\n        )}\n      </td>\n    </>\n  );\n};\n","import React, { useState, useMemo, useCallback } from 'react';\nimport {\n  Link,\n  useLocation,\n  useNavigate,\n  useSearchParams,\n} from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nimport classNames from 'classnames';\nimport './PeopleTable.scss';\n\nimport { PersonRow } from './PersonRow';\nimport { usePeople } from '../../hooks/usePeople';\n\nexport const PeopleTable: React.FC = () => {\n  const { people } = usePeople();\n  const location = useLocation();\n  const history = useNavigate();\n  const [searchParams] = useSearchParams();\n\n  const nameQuery = searchParams.get('query') || '';\n  const [query, setQuery] = useState(nameQuery);\n\n  const sortableColumns = ['Name', 'Sex', 'Born', 'Died'];\n\n  const sortBy = searchParams.get('sortBy') || '';\n  const sortOrder = searchParams.get('sortOrder') || '';\n\n  const getVisiblePeople = () => {\n    return (\n      people.filter((person: Person) => (\n        person.name.toLowerCase().includes(nameQuery)\n        || person.fatherName?.toLowerCase().includes(nameQuery)\n        || person.motherName?.toLowerCase().includes(nameQuery)))\n    );\n  };\n\n  const visiblePeople = useMemo(\n    getVisiblePeople,\n    [people, nameQuery],\n  );\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery.toLowerCase().trimLeft());\n      } else {\n        searchParams.delete('query');\n      }\n\n      history(`?${searchParams.toString()}`);\n    }, 500),\n    [],\n  );\n\n  const setSort = (value: string) => {\n    searchParams.set('sortBy', value);\n    searchParams.set('sortOrder', sortOrder === 'asc' ? 'desc' : 'asc');\n\n    history(`?${searchParams.toString()}`);\n  };\n\n  const handleSort = (value: string) => {\n    setSort(value);\n\n    visiblePeople.sort((a, b) => {\n      switch (value) {\n        case 'name':\n        case 'sex':\n          switch (sortOrder) {\n            case 'asc':\n              return b[value].localeCompare(a[value]);\n            default:\n              return a[value].localeCompare(b[value]);\n          }\n\n        case 'born':\n        case 'died':\n          switch (sortOrder) {\n            case 'asc':\n              return b[value] - a[value];\n            default:\n              return a[value] - b[value];\n          }\n\n        default:\n          return 0;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"is-flex is-justify-content-space-between mb-3\">\n        <p className=\"control has-icons-left\">\n          <input\n            type=\"search\"\n            value={query}\n            onChange={event => {\n              setQuery(event.target.value);\n              applyQuery(event.target.value);\n            }}\n            placeholder=\"Find a person\"\n            className=\"input\"\n            style={{ width: '260px' }}\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-search\" />\n          </span>\n        </p>\n        <Link\n          to=\"/people/new\"\n          className=\"button is-success\"\n        >\n          Add a person\n        </Link>\n      </div>\n\n      <table\n        className=\"table is-hoverable\"\n      >\n        <thead>\n          <tr>\n            {sortableColumns.map(elem => (\n              <th\n                key={elem}\n                className={classNames('table__sort', {\n                  'table__sort--asc': sortOrder === 'asc' && sortBy === elem.toLowerCase(),\n                  'table__sort--desc': sortOrder === 'desc' && sortBy === elem.toLowerCase(),\n                })}\n                onClick={() => {\n                  handleSort(elem.toLowerCase());\n                }}\n              >\n                {elem}\n              </th>\n            ))}\n            <th>Mother</th>\n            <th>Father</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {visiblePeople.map(person => (\n            <tr\n              id={person.slug}\n              key={person.slug}\n              className={\n                classNames(\n                  { 'has-background-warning': location.pathname === `/people/${person.slug}` },\n                )\n              }\n            >\n              <PersonRow person={person} />\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","import React from 'react';\n\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport { PeopleTable } from './PeopleTable';\nimport { usePeople } from '../../hooks/usePeople';\n\nexport const PeoplePage: React.FC = () => {\n  const { people } = usePeople();\n\n  return (\n    <div>\n      <h1 className=\"title\">People page</h1>\n\n      {people.length > 0 && (\n        <PeopleTable />\n      )}\n    </div>\n  );\n};\n","import React, { useMemo } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport classNames from 'classnames';\nimport './NewPerson.scss';\n\nimport { usePeople } from '../../hooks/usePeople';\n\nexport const NewPerson: React.FC = () => {\n  const { people, setPeople } = usePeople();\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors, isValid },\n    getValues,\n    reset,\n  } = useForm<Person>({\n    mode: 'onChange',\n  });\n\n  const values = getValues();\n  const currentYear = new Date().getFullYear();\n\n  const onSubmit = (data: Person) => {\n    let newPerson = data;\n    const slug = `${newPerson.name.toLowerCase().split(' ').join('-')}-${newPerson.born}`;\n\n    newPerson = { ...newPerson, slug };\n\n    setPeople([...people, newPerson]);\n\n    navigate('/people');\n    reset();\n  };\n\n  const getPossibleParents = (gender: string) => {\n    return (\n      people.filter((person: Person) => (\n        person.sex === gender\n        && person.born < values.born\n        && person.died >= values.born))\n    );\n  };\n\n  const possibleMothers = useMemo(\n    () => getPossibleParents('f'),\n    [values.born],\n  );\n\n  const possibleFathers = useMemo(\n    () => getPossibleParents('m'),\n    [values.born],\n  );\n\n  return (\n    <div className=\"form\">\n      <button\n        type=\"button\"\n        className=\"form__back-btn button is-danger\"\n        onClick={() => navigate(-1)}\n      >\n        <span className=\"icon\">\n          <i className=\"fas fa-arrow-left\" />\n        </span>\n      </button>\n\n      <h1 className=\"title has-text-centered mb-6\">Add a new person</h1>\n\n      <form\n        autoComplete=\"off\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <div className=\"form__field\">\n          <input\n            type=\"text\"\n            {...register('name', {\n              required: '*Please, enter a name',\n              pattern: {\n                value: /^[A-Za-z][A-Za-z ]*$/,\n                message: '*Name should contain only letters',\n              },\n            })}\n            className={classNames(\n              'input',\n              {\n                'is-danger': errors?.name,\n                'is-success': values.name,\n              },\n            )}\n            placeholder=\"Enter a name\"\n          />\n          {errors?.name && (\n            <p className=\"help is-danger\">{errors?.name.message}</p>\n          )}\n        </div>\n\n        <div className=\"form__wrapper\">\n          <div className=\"form__field form__field--radio\">\n            <label htmlFor=\"male\" className=\"radio\">\n              <input\n                id=\"male\"\n                type=\"radio\"\n                {...register('sex', {\n                  required: '*Please, select a gender',\n                })}\n                value=\"m\"\n              />\n              &nbsp;Male\n            </label>\n          </div>\n\n          <div className=\"form__field form__field--radio\">\n            <label htmlFor=\"female\" className=\"radio\">\n              <input\n                id=\"female\"\n                type=\"radio\"\n                {...register('sex', {\n                  required: '*Please, select a gender',\n                })}\n                value=\"f\"\n              />\n              &nbsp;Female\n            </label>\n          </div>\n          {errors?.sex && (\n            <p className=\"help is-danger\">{errors?.sex.message}</p>\n          )}\n        </div>\n\n        <div className=\"form__field-wrapper is-flex\">\n          <div className=\"form__field\">\n            <input\n              type=\"number\"\n              {...register('born', {\n                required: '*Please, enter a year of birth',\n                min: {\n                  value: 1400,\n                  message: `*A year should be between 1400 and ${currentYear}`,\n                },\n                max: {\n                  value: currentYear,\n                  message: `*A year should be between 1400 and ${currentYear}`,\n                },\n              })}\n              className={classNames(\n                'input',\n                {\n                  'is-danger': errors?.born,\n                  'is-success': values.born,\n                },\n              )}\n              placeholder=\"Enter a year of birth\"\n            />\n            {errors?.born && (\n              <p className=\"help is-danger\">{errors?.born.message}</p>\n            )}\n          </div>\n\n          <div className=\"form__field\">\n            <input\n              type=\"number\"\n              {...register('died', {\n                disabled: false,\n                min: {\n                  value: values.born,\n                  message: '*Please, enter a valid year of death',\n                },\n                max: {\n                  value: +values.born + 150,\n                  message: '*A person can\\'t be older then 150',\n                },\n              })}\n              className={classNames(\n                'input',\n                {\n                  'is-danger': errors?.died,\n                  'is-success': values.died,\n                },\n              )}\n              placeholder=\"Enter a year of death\"\n              disabled={!values.born}\n            />\n            {errors?.died && (\n              <p className=\"help is-danger\">{errors?.died.message}</p>\n            )}\n          </div>\n        </div>\n\n        <div className=\"form__field-wrapper is-flex\">\n          <div className=\"form__field select\">\n            <select\n              {...register('motherName')}\n              className=\"form__select\"\n              disabled={!values.born}\n            >\n              <option value=\"\">\n                Select mother&apos;s name\n              </option>\n              {possibleMothers.map(mother => (\n                <option key={mother.slug} value={mother.name}>\n                  {mother.name}\n                </option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"form__field select\">\n            <select\n              {...register('fatherName')}\n              className=\"form__select\"\n              disabled={!values.born}\n            >\n              <option value=\"\">\n                Select father&apos;s name\n              </option>\n              {possibleFathers.map(father => (\n                <option key={father.slug} value={father.name}>\n                  {father.name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n\n        <input\n          type=\"submit\"\n          value=\"Add\"\n          className=\"form__btn button is-success\"\n          disabled={!isValid}\n        />\n      </form>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\n\nimport 'bulma';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Layout } from './components/Layout/Layout';\nimport { HomePage } from './components/pages/HomePage/HomePage';\nimport { PeoplePage } from './components/pages/PeoplePage/PeoplePage';\nimport { NewPerson } from './components/pages/PeoplePage/NewPerson';\nimport { NotFoundPage } from './components/pages/NotFoundPage/NotFoundPage';\nimport { PeopleProvider } from './components/hoc/PeopleProvider';\n\nexport const App: React.FC = () => (\n  <PeopleProvider>\n    <Routes>\n      <Route path=\"/\" element={<Layout />}>\n        <Route index element={<HomePage />} />\n        <Route\n          path=\"/home\"\n          element={\n            <Navigate to=\"/\" replace />\n          }\n        />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"people/new\" element={<NewPerson />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </PeopleProvider>\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}